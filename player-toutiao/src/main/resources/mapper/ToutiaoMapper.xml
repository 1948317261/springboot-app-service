<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.player.toutiao.mapper.ToutiaoMapper">
    <sql id="recordSql">
        (
          id,
          channel_id,
          content,
          duration,
          href,
          img,
          `type` ,
          isTop,
          title,
          create_time,
          update_time,
          source,
          comment_id,
          labels,
          author_id,
          author_avatar,
          author_href,
          ranks,
          )VALUES(
          #{id},
          #{channelId},
          #{content},
          #{duration},
          #{href},
          #{img},
          #{imgNum},
          #{type} ,
          #{isTop},
          #{title},
          #{createTime},
          #{updateTime},
          #{source},
          #{commentId},
          #{labels},
          #{authorId},
          #{authorAvatar},
          #{authorHref},
          #{ranks})
    </sql>

    <resultMap type="ArticleEntity" id="ArticleUserResultMap">
        <id property="id" column="id" />
        <result property="channelId" column="channel_id" />
        <result property="content" column="content" />
        <result property="duration" column="duration" />
        <result property="href" column="href" />
        <result property="img" column="img" />
        <result property="type" column="type" />
        <result property="isTop" column="is_top" />
        <result property="title" column="title" />
        <result property="createTime" column="create_time" />
        <result property="updateTime" column="update_time" />
        <result property="source" column="source" />
        <result property="commentId" column="comment_id" />
        <result property="labels" column="labels" />
        <result property="authorId" column="author_id" />
        <result property="authorAvatar" column="author_avatar" />
        <result property="author_href" column="authorHref" />
        <result property="ranks" column="ranks" />
        <result property="disabled" column="disabled" />

        <association  property="authorInfo" javaType="com.player.common.entity.AuthorEntity">
            <id property="id" column="id"/>
            <result property="authorId" column="author_id"/>
            <result property="name" column="name"/>
            <result property="authorDesc" column="author_desc"/>
            <result property="avatarUrl" column="avatar_url"/>
            <result property="description" column="description" />
            <result property="followersCount" column="followers_count"/>
            <result property="verifiedContent" column="verified_content"/>
            <result property="createTime" column="create_time"/>
            <result property="updateTime" column="update_time"/>
            <result property="authorHref" column="author_href"/>
        </association>
    </resultMap>

    <sql id="getArticleListSql">
        SELECT
            t.id,
            t.channel_id,
            t.content,
            t.duration,
            t.href,
            t.img,
            t.type,
            t.is_top,
            t.title,
            t.create_time,
            t.update_time,
            t.source,
            t.comment_id,
            t.labels,
            t.author_id,
            t.author_avatar,
            t.author_href,
            t.ranks,
            u.id,
            u.author_id,
            u.name,
            u.author_desc,
            u.avatar_url,
            u.description,
            u.followers_count,
            u.verified_content,
            u.create_time,
            u.update_time,
            u.author_href
        FROM toutiao_article t  LEFT JOIN toutiao_author u ON t.author_id = u.author_id or t.author_id = u.name
    </sql>

    <select id="getArticleList" resultMap="ArticleUserResultMap">
        <if test="channelId == 0 and start == 0">
            (<include refid="getArticleListSql"></include> WHERE t.content IS NOT NULL AND t.is_top = '1'AND t.channel_id = '0' ORDER BY t.create_time DESC LIMIT 0,3) UNION ALL
        </if>
        (<include refid="getArticleListSql"></include>
        where t.is_top = '0' AND t.content IS NOT NULL
        <if test="keyword!=null and keyword!=''">
            and t.title like concat('%',#{keyword},'%') or t.content like concat('%',#{keyword},'%')
        </if>
        <if test="type!=null and type!=''">
            and t.type = #{type}
        </if>
        <if test="channelId!=null and channelId!=''">
            and t.channel_id = #{channelId}
        </if>
        <if test="authorId!=null and authorId!=''">
            and t.author_id = #{authorId}
        </if>
        ORDER BY t.create_time DESC  LIMIT #{start}, #{pageSize})
    </select>

    <select id="getArticleDetail" resultMap="ArticleUserResultMap">
        SELECT t.*,u.* FROM toutiao_article t LEFT JOIN toutiao_author u ON t.author_id = u.author_id or t.author_id = u.name WHERE t.id = #{id} AND t.disabled = 0
    </select>

    <insert id="log" parameterType="com.player.common.entity.LogEntity">
       INSERT INTO log(method,url,headers,ip,params,query_string,result,start_time,run_time,description,end_time,type,oparation,user_id)VALUES(#{method},#{url},#{headers},#{ip},#{params},#{queryString},#{result},#{startTime},#{runTime},#{description},#{endTime},#{type},#{oparation},#{userId})
    </insert>

    <insert id="saveArticleRecord" parameterType="ArticleEntity">
       INSERT INTO toutiao_article_record(channel_id,content,duration,href,img,type,is_top,title,create_time,update_time,source,comment_id,labels,author_id,author_avatar,author_href,ranks,disabled,user_id)VALUES (#{channelId},#{content},#{duration},#{href},#{img},#{type},#{isTop},#{title},#{createTime},#{updateTime},#{source},#{commentId},#{labels},#{authorId},#{authorAvatar},#{authorHref},#{ranks},#{disabled},#{userId}) ON DUPLICATE KEY UPDATE href= #{href}
    </insert>

    <delete id="deleteArticleRecord">
        DELETE FROM toutiao_article_record WHERE id NOT IN (SELECT T.id FROM (SELECT id FROM toutiao_article_record WHERE user_id = #{userId} ORDER BY id DESC LIMIT 0,20) AS T);
    </delete>

    <select id="getFavoriteChannels" resultType="ChannelEntity">
        SELECT * FROM toutiao_favorite_channel WHERE id = #{id} AND disabled = 0 ORDER BY sequence ASC
    </select>

    <select id="getAllChannels" resultType="ChannelEntity">
        SELECT * FROM toutiao_all_channel WHERE disabled = 0
        <if test="list != null and list.size() > 0">
            AND status IN
            <foreach item="item" index="index" collection="list" open="("  close=")" separator=",">
                #{item}
            </foreach>
        </if>
         ORDER BY sequence ASC
    </select>

    <select id="getArticleRecordList" resultType="ArticleEntity">
        SELECT * FROM toutiao_article_record WHERE user_id = #{user_id} ORDER BY create_time DESC LIMIT 0,50
    </select>

    <insert id="insertFavoriteChannels">
        INSERT INTO toutiao_favorite_channel(channel_id,channel_name,href,create_time,update_time,user_id,disabled,status,sequence)
        VALUES
        <foreach collection ="list" item="item" separator =",">
            (#{item.channelId},#{item.channelName},#{item.href},#{item.createTime},#{item.updateTime},#{item.userId},#{item.disabled},#{item.status},#{item.sequence})
        </foreach >
    </insert>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.player.music.mapper.MyMusicMapper">

    <sql id="musicSql">
      select
      id,
      album_id,
      song_name,
      author_name,
      album_name,
      version,
      `language`,
      publish_date,
      wide_audio_id,
      is_publish,
      big_pack_id,
      final_id,
      audio_id,
      author_id,
      similar_audio_id,
      is_hot,
      album_audio_id,
      audio_group_id,
      cover,
      play_url,
      local_play_url,
      source_name,
      source_url,
      create_time,
      update_time,
      label,
      lyrics
      from music
    </sql>

    <select id="getKeywordMusic" resultType="MyMusicEntity">
        <include refid="musicSql"></include>
         order by is_hot desc limit 0,1
    </select>

    <select id="getMusicClassify" resultType="MusicClassifyEntity">
        select * from music_classify_relation where disabled = 0 and permission >= 0 order by classify_rank desc
    </select>

    <select id="getMusicListByClassifyId" resultType="MyMusicEntity">
        select m.*,(case when d.audio_id is not null then 1 else 0 end) as is_like from music_classify c left join music m on c.audio_id = m.audio_id left join music_directory d on c.audio_id = d.audio_id and d.user_id=#{userId} where c.classify_id =1 order by c.audio_rank desc limit #{start},#{pageSize}
    </select>

    <select id="getMusicTotalByClassifyId" resultType="Long">
        select count(*) as total from music_classify where classify_id = #{classifyId}
    </select>

    <select id="getSingerList" resultType="MusicAuthorEntity">
        select * from music_authors where avatar is not null order by `rank` desc limit  #{start},#{pageSize}
    </select>

    <select id="getSingerTotal" resultType="Long">
        select count(*) as total from music_authors where avatar is not null
    </select>
</mapper>

